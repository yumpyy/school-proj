#!/usr/bin/env python3

import wave
import sys
import os

from vosk import Model, KaldiRecognizer, SetLogLevel

# --- Modules in directory
from myMods.weather import wttr
from myMods.gptSupport import gptRespond
from myMods.yt import yt 
from myMods.word import word


# --- Variable Set
SetLogLevel(0)

# ----- Transc and TTS set
ttsModel="./tts/model.onnx"
transcModel="vosk-model"
model = Model("vosk-model")

# ----- Audio Set
wf = wave.open(sys.argv[1], "rb")
rec = KaldiRecognizer(model, wf.getframerate())
rec.SetWords(True)
rec.SetPartialWords(True)

if wf.getnchannels() != 1 or wf.getsampwidth() != 2 or wf.getcomptype() != "NONE":
    print("Audio file must be WAV format mono PCM.")
    sys.exit(1)

# --- Read wav file and Transcribe
while True:
    data = wf.readframes(4000)
    if len(data) == 0:
        break
    if rec.AcceptWaveform(data):
        print(rec.Result())

text = rec.FinalResult().split('"')[-2] # ----- Final text
# print(text.split())
textSplit = text.split()

command = text.split()[0]
query = text.split()[1:]
# print(query)


# --- List Of Words
weatherCheck = ['weather']

def checkList(string, listOfWords):
    for word in listOfWords:
        if word == string:
            return True


# --- Command Checks

if command == "wiki":

    query = "_".join(query).title()
    # print(query) 
    
    shellExec = f"curl -sL 'https://en.wikipedia.org/wiki/{query}' | grep '<p>' | sed -e 's/<[^>]*>//g' -e 's/\&\#[0-9][0-9]//g' -e 's/\;[0-9][0-9]\;//g'  -e 's/\;//g' | head -1 > temp.txt"
    os.system(shellExec)

    tts = f"cat temp.txt | piper --model {ttsModel} --output_raw | aplay -q -r 22050 -f S16_LE -t raw"
    os.system(tts)
    # os.system("rm ./temp.txt")

elif command == "play":
    ttsquery = " ".join(query)
    tts = f'echo Ok, Playing "{ttsquery}" now | piper --model {ttsModel} --output_raw | aplay -q -r 22050 -f S16_LE -t raw & PIDTTS=$!'
    # print(tts)
    os.system(tts)
    query = "+".join(query)
    # print(query)
    yt_command = yt(query) + '& PIDYT=$!'
    os.system(yt_command)
    os.system("wait $PIDTTS")
    os.system("wait $PIDYT")

elif command == "define":
    query = " ".join(query)
    definiton = word(query)
    tts = f'echo "The word {query} means {definiton}" | piper --model {ttsModel} --output_raw | aplay -q -r 22050 -f S16_LE -t raw & PIDTTS=$!'
    # print(definiton)
    # print(tts)
    os.system(tts)
    # os.system("rm ./temp.txt")

# elif text.split() in weatherCheck:
elif checkList(textSplit, weatherCheck) == True:
    print('----\nWORKINF')
    response = wttr()
    tts = f"echo {response} | piper --model {ttsModel} --output_raw | aplay -q -r 22050 -f S16_LE -t raw"
    os.system(tts)

else:
    print(query)
    query = str(command) + " " + " ".join(query)
    print(query)
    response = gptRespond(query)
    print(f"Response : {response}")
    tts = f'echo "{response}" | piper --model {ttsModel} --output_raw | aplay -q -r 22050 -f S16_LE -t raw'
    os.system(tts)
