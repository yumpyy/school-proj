#!/usr/bin/env python3

import wave
import sys
import os
import pyaudio

# my modules
from yt import yt 
from vosk import Model, KaldiRecognizer, SetLogLevel
from word import word

SetLogLevel(0)

TTS_MODEL="./tts/model.onnx"
TRANSCRIBER_MODEL="vosk-model"

wf = wave.open("temp.wav", "rb")
if wf.getnchannels() != 1 or wf.getsampwidth() != 2 or wf.getcomptype() != "NONE":
    print("Audio file must be WAV format mono PCM.")
    sys.exit(1)

model = Model("vosk-model")

rec = KaldiRecognizer(model, wf.getframerate())
rec.SetWords(True)
rec.SetPartialWords(True)

while True:
    data = wf.readframes(4000)
    if len(data) == 0:
        break
    if rec.AcceptWaveform(data):
        print(rec.Result())

text = rec.FinalResult().split('"')[-2]
# print(text)

command = text.split()[0]
query = text.split()[1:]
# print(query)

if command == "wiki":

    query = "_".join(query).title()
    # print(query) 
    
    shell_exec = f"curl -sL 'https://en.wikipedia.org/wiki/{query}' | grep '<p>' | sed -e 's/<[^>]*>//g' -e 's/\&\#[0-9][0-9]//g' -e 's/\;[0-9][0-9]\;//g'  -e 's/\;//g' | head -1 > temp.txt"
    os.system(shell_exec)
    tts = f"cat temp.txt | piper --model {TTS_MODEL} --output_raw | aplay -q -r 22050 -f S16_LE -t raw"
    os.system(tts)
    # os.system("rm ./temp.txt")

elif command == "play":
    ttsquery = " ".join(query)
    tts = f'echo Ok, Playing "{ttsquery}" now | piper --model {TTS_MODEL} --output_raw | aplay -q -r 22050 -f S16_LE -t raw & PIDTTS=$!'
    # print(tts)
    os.system(tts)
    query = "+".join(query)
    # print(query)
    yt_command = yt(query) + '& PIDYT=$!'
    final_command = tts + '&' + yt_command
    os.system(yt_command)
    os.system("wait $PIDTTS")
    os.system("wait $PIDYT")

elif command == "define":
    query = " ".join(query)
    definiton = word(query)
    tts = f'echo "The word {query} means {definiton}" | piper --model {TTS_MODEL} --output_raw | aplay -q -r 22050 -f S16_LE -t raw & PIDTTS=$!'
    # print(definiton)
    # print(tts)
    os.system(tts)
    # os.system("rm ./temp.txt")
